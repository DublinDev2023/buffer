private static Schema GetUnionBranchSchema(UnionSchema unionSchema, object value)
{
    foreach (var schema in unionSchema.Schemas)
    {
        if (schema.Tag == Schema.Type.Null && value == null)
            return schema;

        if (value != null && IsInstanceOfSchema(schema, value))
            return schema;
    }

    throw new InvalidOperationException($"No matching schema found in union for value of type {value.GetType().FullName}");
}

// Simple type check helper
private static bool IsInstanceOfSchema(Schema schema, object value)
{
    switch (schema.Tag)
    {
        case Schema.Type.Record:
            var recordSchema = (RecordSchema)schema;
            // Check if value's CLR type name matches record schema name
            return string.Equals(value.GetType().Name, recordSchema.Name, StringComparison.OrdinalIgnoreCase);

        case Schema.Type.String:
            return value is string;

        case Schema.Type.Int:
            return value is int;

        case Schema.Type.Long:
            return value is long;

        case Schema.Type.Boolean:
            return value is bool;

        case Schema.Type.Array:
            return value is IEnumerable;

        // Add more types here as needed

        default:
            return false;
    }
}
